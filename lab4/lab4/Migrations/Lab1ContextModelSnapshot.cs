// <auto-generated />
using System;
using Lab02;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace lab4.Migrations
{
    [DbContext(typeof(Lab1Context))]
    partial class Lab1ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("Cyrillic_General_CI_AS")
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Lab3.Models.Car", b =>
                {
                    b.Property<int>("CarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CarID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarId"));

                    b.Property<int>("BodyVolume")
                        .HasColumnType("int");

                    b.Property<int?>("CarBrandId")
                        .HasColumnType("int")
                        .HasColumnName("CarBrandID");

                    b.Property<int>("LiftingCapacity")
                        .HasColumnType("int");

                    b.Property<string>("RegistrationNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.HasKey("CarId")
                        .HasName("PK__Cars__68A0340E67C70070");

                    b.HasIndex("CarBrandId");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("Lab3.Models.CarBrand", b =>
                {
                    b.Property<int>("CarBrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CarBrandID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarBrandId"));

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("CarBrandId")
                        .HasName("PK__CarBrand__3EAE0B29712E2DC6");

                    b.ToTable("CarBrands");
                });

            modelBuilder.Entity("Lab3.Models.CargoTransportation", b =>
                {
                    b.Property<int>("DocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DocumentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DocumentId"));

                    b.Property<int?>("CarId")
                        .HasColumnType("int")
                        .HasColumnName("CarID");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date");

                    b.Property<int?>("DistanceId")
                        .HasColumnType("int")
                        .HasColumnName("DistanceID");

                    b.Property<int?>("DriverId")
                        .HasColumnType("int")
                        .HasColumnName("DriverID");

                    b.Property<int?>("LoadId")
                        .HasColumnType("int")
                        .HasColumnName("LoadID");

                    b.Property<int?>("OrganizationId")
                        .HasColumnType("int")
                        .HasColumnName("OrganizationID");

                    b.Property<int?>("TransportationTariffId")
                        .HasColumnType("int")
                        .HasColumnName("TransportationTariffID");

                    b.HasKey("DocumentId")
                        .HasName("PK__CargoTra__1ABEEF6F97EC5565");

                    b.HasIndex("CarId");

                    b.HasIndex("DistanceId");

                    b.HasIndex("DriverId");

                    b.HasIndex("LoadId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("TransportationTariffId");

                    b.ToTable("CargoTransportation", (string)null);
                });

            modelBuilder.Entity("Lab3.Models.Distance", b =>
                {
                    b.Property<int>("DistanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DistanceID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DistanceId"));

                    b.Property<int?>("ArrivalSettlementId")
                        .HasColumnType("int")
                        .HasColumnName("ArrivalSettlementID");

                    b.Property<int?>("DeparturesSettlementId")
                        .HasColumnType("int")
                        .HasColumnName("DeparturesSettlementID");

                    b.Property<int?>("Distance1")
                        .HasColumnType("int")
                        .HasColumnName("Distance");

                    b.HasKey("DistanceId")
                        .HasName("PK__Distance__A24E2A1C2181A126");

                    b.HasIndex("ArrivalSettlementId");

                    b.HasIndex("DeparturesSettlementId");

                    b.ToTable("Distances");
                });

            modelBuilder.Entity("Lab3.Models.Driver", b =>
                {
                    b.Property<int>("DriverId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DriverID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DriverId"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("PassportDetails")
                        .IsRequired()
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("varchar(9)");

                    b.HasKey("DriverId")
                        .HasName("PK__Drivers__F1B1CD24A6D77012");

                    b.ToTable("Drivers");
                });

            modelBuilder.Entity("Lab3.Models.Load", b =>
                {
                    b.Property<int>("LoadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LoadID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LoadId"));

                    b.Property<string>("LoadName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Volume")
                        .HasColumnType("int");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("LoadId")
                        .HasName("PK__Loads__4ED77A2DE7E6350B");

                    b.ToTable("Loads");
                });

            modelBuilder.Entity("Lab3.Models.Organization", b =>
                {
                    b.Property<int>("OrganizationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OrganizationID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrganizationId"));

                    b.Property<string>("OrganizationName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("OrganizationId")
                        .HasName("PK__Organiza__CADB0B72E36729C0");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("Lab3.Models.Settlement", b =>
                {
                    b.Property<int>("SettlementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SettlementID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SettlementId"));

                    b.Property<string>("SettlementName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("SettlementId")
                        .HasName("PK__Settleme__771254BA6604459B");

                    b.ToTable("Settlements");
                });

            modelBuilder.Entity("Lab3.Models.TransportationTariff", b =>
                {
                    b.Property<int>("TransportationTariffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TransportationTariffID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransportationTariffId"));

                    b.Property<int>("TariffPerM3Km")
                        .HasColumnType("int")
                        .HasColumnName("TariffPer(m^3*km)");

                    b.Property<int>("TariffPerTKm")
                        .HasColumnType("int")
                        .HasColumnName("TariffPer(t*km)");

                    b.HasKey("TransportationTariffId")
                        .HasName("PK__Transpor__A3368695B734D0C0");

                    b.ToTable("TransportationTariffs");
                });

            modelBuilder.Entity("Lab02.Car", b =>
                {
                    b.HasOne("Lab3.Models.CarBrand", "CarBrand")
                        .WithMany("Cars")
                        .HasForeignKey("CarBrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Cars__CarBrandID__4222D4EF");

                    b.Navigation("CarBrand");
                });

            modelBuilder.Entity("Lab3.Models.CargoTransportation", b =>
                {
                    b.HasOne("Lab02.Car", "Car")
                        .WithMany("CargoTransportations")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__CargoTran__CarID__4BAC3F29");

                    b.HasOne("Lab3.Models.Distance", "Distance")
                        .WithMany("CargoTransportations")
                        .HasForeignKey("DistanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__CargoTran__Dista__49C3F6B7");

                    b.HasOne("Lab3.Models.Driver", "Driver")
                        .WithMany("CargoTransportations")
                        .HasForeignKey("DriverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__CargoTran__Drive__4AB81AF0");

                    b.HasOne("Lab3.Models.Load", "Load")
                        .WithMany("CargoTransportations")
                        .HasForeignKey("LoadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__CargoTran__LoadI__4CA06362");

                    b.HasOne("Lab3.Models.Organization", "Organization")
                        .WithMany("CargoTransportations")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__CargoTran__Organ__48CFD27E");

                    b.HasOne("Lab3.Models.TransportationTariff", "TransportationTariff")
                        .WithMany("CargoTransportations")
                        .HasForeignKey("TransportationTariffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__CargoTran__Trans__4D94879B");

                    b.Navigation("Car");

                    b.Navigation("Distance");

                    b.Navigation("Driver");

                    b.Navigation("Load");

                    b.Navigation("Organization");

                    b.Navigation("TransportationTariff");
                });

            modelBuilder.Entity("Lab3.Models.Distance", b =>
                {
                    b.HasOne("Lab3.Models.Settlement", "ArrivalSettlement")
                        .WithMany("DistanceArrivalSettlements")
                        .HasForeignKey("ArrivalSettlementId")
                        .HasConstraintName("FK__Distances__Arriv__3B75D760");

                    b.HasOne("Lab3.Models.Settlement", "DeparturesSettlement")
                        .WithMany("DistanceDeparturesSettlements")
                        .HasForeignKey("DeparturesSettlementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Distances__Depar__3A81B327");

                    b.Navigation("ArrivalSettlement");

                    b.Navigation("DeparturesSettlement");
                });

            modelBuilder.Entity("Lab02.Car", b =>
                {
                    b.Navigation("CargoTransportations");
                });

            modelBuilder.Entity("Lab3.Models.CarBrand", b =>
                {
                    b.Navigation("Cars");
                });

            modelBuilder.Entity("Lab3.Models.Distance", b =>
                {
                    b.Navigation("CargoTransportations");
                });

            modelBuilder.Entity("Lab3.Models.Driver", b =>
                {
                    b.Navigation("CargoTransportations");
                });

            modelBuilder.Entity("Lab3.Models.Load", b =>
                {
                    b.Navigation("CargoTransportations");
                });

            modelBuilder.Entity("Lab3.Models.Organization", b =>
                {
                    b.Navigation("CargoTransportations");
                });

            modelBuilder.Entity("Lab3.Models.Settlement", b =>
                {
                    b.Navigation("DistanceArrivalSettlements");

                    b.Navigation("DistanceDeparturesSettlements");
                });

            modelBuilder.Entity("Lab3.Models.TransportationTariff", b =>
                {
                    b.Navigation("CargoTransportations");
                });
#pragma warning restore 612, 618
        }
    }
}
